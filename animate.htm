<html>
<head>
	<title></title>
	<script src="examples/mithril.js"></script>
	<script src="../mithril.bindings/mithril.bindings.js"></script>
	<script src="../mithril.sugartags/mithril.sugartags.js"></script>
	<script src="../mithril.templates/mithril.templates.js"></script>
	<script src="mithril.animate.js"></script>


	<script src="/libs/jquery-1.9.1.js"></script>

	<style>
		#content { width: 12em; }
		.fBox { width: 120px; position: absolute; }
		.eBox { width: 2em; height: 2em; position: absolute; background-color: #ccc; border: 1px solid #c0c0c0; }
		.eBox.alt1 { background-color: #cfc; border: 1px solid #c0ffc0; opacity: 0; }

		.boxSurround { margin: 1em; }

		.eBox.icon { background-color: inherit; border: none; background-image: url(examples/icons.png); background-repeat: no-repeat; background-position: 0 -32px;  }
		.eBox.icon.alt1 { background-position: 0 0;  }
	</style>


</head>
<body>
<h1>Mithril.animate - bindable animations</h1>
<div id="content"></div>
<!--
<button type="button" id="setValueButton">Set name</button>
-->

<script>

//	A few basic animations
m.addBinding("aniFade", function(prop){
	var toggle = m.unwrap(prop)? 0: 1;
	m.animate(this, { 
		opacity: value, 
		duration: "0.5s"
	});
});

m.addBinding("aniFadeShrink", function(prop){
	var value = m.unwrap(prop)? 0: 1;
	m.animate(this, { 
		opacity: value, 
		scale: value, 
		duration: "0.5s" 
	});
});

m.addBinding("aniFadeDown", function(prop){
	var value = m.unwrap(prop)? 0: 1,
		props = {
			opacity: value, 
			top: (value * 100) + "px", 
			duration: "0.5s" 
		};
	m.animate(this, props);
});

m.addBinding("aniSpinCWFade", function(prop){
	var value = m.unwrap(prop)? 0: 1,
		props = {
			opacity: value, 
			rotate: (value * -180) + "deg", 
			duration: "0.5s" 
		};
	m.animate(this, props);
});

m.addBinding("aniReverseSpinCCWFade", function(prop){
	var value = m.unwrap(prop)? 1: 0,
		props = {
			opacity: value, 
			rotate: (value * 180) + "deg", 
			duration: "0.5s" 
		};
	m.animate(this, props);
});

</script>

<script>
//	Basic bi-directional data binding
var app = {
	model: function(name) {
		this.name = m.p(name);
		this.hide = m.p();

		this.fadeDown = m.p();
		this.spinCWFade = m.p();
	},
	controller: function() {
		window.model = this.user = new app.model("John Doe");
	},
	view: function(data) {
		var u = data.user;
		return [
			// H1({ text: u.name }),
			// BUTTON({ type: "button", toggle: u.hide }, "Toggle hide"),
			// DIV({ class: "fBox", aniFadeDown: u.hide }, [
			// 	INPUT({ name: "name", value: u.name }),
			// 	DIV("Model name value: " + u.name())
			// ]),

			// BUTTON({ type: "button", toggle: u.fadeDown }, "Fade down"),
			// DIV({ class: "eBox", aniFadeDown: u.fadeDown }),

			//	hehe: http://www.google.com/design/spec/animation/delightful-details.html
			//BUTTON({ type: "button", toggle: u.spinCWFade }, "Spin CW fade"),
			DIV({ class: "boxSurround", toggle: u.spinCWFade}, [
				DIV({ class: "eBox icon", aniSpinCWFade: u.spinCWFade }),
				DIV({ class: "eBox alt1 icon", aniReverseSpinCCWFade: u.spinCWFade })
			])
		];
	}
};

//initialize
m.module(document.getElementById('content'), app);
</script>

<script>
//	Demonstrate external access to the model
// document.getElementById('setValueButton').onclick = function(){
// 	model.name("John Smith");
// };
</script>

</body>
</html>