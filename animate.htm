<html>
<head>
	<title></title>
	<script src="examples/mithril.js"></script>
	<script src="../mithril.bindings/mithril.bindings.js"></script>
	<script src="../mithril.sugartags/mithril.sugartags.js"></script>
	<script src="../mithril.templates/mithril.templates.js"></script>
	<script src="mithril.animate.js"></script>


	<script src="/libs/jquery-1.9.1.js"></script>

	<style>
		.eBox { width: 2em; height: 2em; background-color: #7b7; border: 1px solid #70bb70; }
		.eBox.alt1 { background-color: #cfc; border: 1px solid #c0ffc0; opacity: 0; }
		.eBox.abs { top: 88px; position: absolute; }

		.eBox.icon { position: absolute; background-color: inherit; border: none; background-image: url(examples/icons.png); background-repeat: no-repeat; background-position: 0 -32px;  }
		.eBox.icon.alt1 { background-position: 0 0;  }


		.cf:before, .cf:after {content: " "; display: table; }
		.cf:after {clear: both; }
		.cf {*zoom: 1; }

		.exampleBox:before, .exampleBox:after {content: " "; display: table; }
		.exampleBox:after {clear: both; }
		.exampleBox { *zoom: 1; min-height: 123px; position: relative;}

	</style>


</head>
<body>
<h1>Mithril.animate - bindable animations</h1>
<p>
	A compact library that allows you to bind animations to properties on your elements. Couldn't be simpler, for example:
</p>
<pre><code>
//	Add custom animation binding
m.addBinding("aniFadeShrink", function(prop){
	var value = m.unwrap(prop)? 0: 1;
	m.animate(this, { 
		opacity: value, 
		scale: value
	});
});

//	Basic animation examples
var app = {
	model: function() {
		this.fadeShrink = m.p();
	},
	controller: function() {
		this.model = new app.model();
	},
	view: function(data) {
		var o = data.model;
		return [
			BUTTON({ type: "button", toggle: u.fadeShrink }, "Toggle fade shrink"),
			DIV({ class: "eBox", aniFadeShrink: u.fadeShrink })
		];
	}
};	
</code></pre>
<div id="content"></div>

<script>

//	A few basic animations
m.addBinding("aniFade", function(prop){
	var value = m.unwrap(prop)? 0: 1;
	m.animate(this, {
		opacity: value
	});
});

m.addBinding("aniFadeShrink", function(prop){
	var value = m.unwrap(prop)? 0: 1;
	m.animate(this, { 
		opacity: value, 
		scale: value
	});
});

m.addBinding("aniFadeUp", function(prop){
	var value = m.unwrap(prop)? 0: 1;
	m.animate(this, {
		opacity: value,
		top: ((value) * 88) + "px"
	});
});

m.addBinding("aniSpinCWFade", function(prop){
	var value = m.unwrap(prop)? 0: 1;
	m.animate(this, {
		opacity: value, 
		rotate: (value * -180) + "deg"
	});
});

m.addBinding("aniReverseSpinCCWFade", function(prop){
	var value = m.unwrap(prop)? 1: 0;
	m.animate(this, {
		opacity: value, 
		rotate: (value * 180) + "deg"
	});
});

</script>

<script>
//	Basic animation examples
var app = {
	model: function(name) {
		this.fade = m.p();
		this.fadeShrink = m.p();
		this.fadeUp = m.p();
		this.spinCWFade = m.p();
	},
	controller: function() {
		window.model = this.user = new app.model("John Doe");
	},
	view: function(data) {
		var u = data.user;
		return [
			DIV({ class: "exampleBox"}, [
				H2("Fade"),
				BUTTON({ type: "button", toggle: u.fade }, "Toggle fade"),
				DIV({ class: "eBox", aniFade: u.fade })
			]),

			DIV({ class: "exampleBox"}, [
				H2("Fade shrink"),
				BUTTON({ type: "button", toggle: u.fadeShrink }, "Toggle fade shrink"),
				DIV({ class: "eBox", aniFadeShrink: u.fadeShrink })
			]),

			DIV({ class: "exampleBox"}, [
				H2("Fade up"),
				BUTTON({ type: "button", toggle: u.fadeUp }, "Toggle fade up"),
				DIV({ class: "eBox abs", aniFadeUp: u.fadeUp })
			]),

			//	Menu button from: http://www.google.com/design/spec/animation/delightful-details.html
			DIV({ class: "exampleBox"}, [
				H2("Material design menu button"),
				DIV({ class: "boxSurround", toggle: u.spinCWFade}, [
					DIV({ class: "eBox icon", aniSpinCWFade: u.spinCWFade }),
					DIV({ class: "eBox alt1 icon", aniReverseSpinCCWFade: u.spinCWFade })
				])
			])
		];
	}
};

//initialize
m.module(document.getElementById('content'), app);
</script>

<script>
//	Demonstrate external access to the model
// document.getElementById('setValueButton').onclick = function(){
// 	model.name("John Smith");
// };
</script>

</body>
</html>