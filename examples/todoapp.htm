<html>
<head>
	<title>Tabjs todo app</title>
		<script src="../dist/tabjs.js"></script>
	<style>
		.done { text-decoration: line-through; }
	</style>
</head>
<body>

<div id="content"></div>

<script>
//  Basic todo app
var app = {
	model: function() {
		var self = this;
		self.todos = m.p([
			{ text: "learn tabjs", done: m.p(true) },
			{ text: "build a tabjs app", done: m.p(false) }
		]);
		self.input = m.p("");
		self.remaining = function(){
			var count = 0;
			self.todos().map(function(todo) {
				count += todo.done() ? 0 : 1;
			});
			return count;
		};
		self.archive = function(){
			var list = [];
			self.todos().map(function(todo) {
				if(!todo.done()) { list.push(todo); }
			});
			self.todos(list);
		};
		self.addTodo = function(){
			var value = self.input();
			if(value) {
				//  Using bindings model push for arrays
				self.todos.push({text: value, done: m.p(false)});
				self.input("");
			}
			return false;
		};
	},
	controller: function() {
		window.model = this.model = new app.model();
	},
	view: function(ctrl) {
		var data = ctrl.model;
		return [
			H1("Tabjs todos - " + data.remaining() + " of " + data.todos().length + " remaining"),
			BUTTON({ onclick: data.archive }, "Archive"),
			UL([
				data.todos().map(function(todo, idx){
					return LI({ class: todo.done()? "done": "", toggle: todo.done }, todo.text);
				})
			]),
			FORM({ onsubmit: data.addTodo }, [
				INPUT({ type: "text", value: data.input, placeholder: "Add todo" }),
				BUTTON({ type: "submit"}, "Add")
			])
		];
	}
};

//initialize
m.module(document.getElementById("content"), app);
</script>

</body>
</html>